apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eshop-ingress
  namespace: eshop
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  defaultBackend:
    service:
      name: user-svc
      port:
        number: 8000
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /user-svc/?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-svc
                port:
                  number: 8000
          - path: /billing-svc/?(.*)
            pathType: Prefix
            backend:
              service:
                name: billing-svc
                port:
                  number: 8002
          - path: /order-svc/?(.*)
            pathType: Prefix
            backend:
              service:
                name: order-svc
                port:
                  number: 8004
          - path: /notification-svc/?(.*)
            pathType: Prefix
            backend:
              service:
                name: notification-svc
                port:
                  number: 8006

---

apiVersion: v1
kind: Service
metadata:
  name: user-svc
  namespace: eshop
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: user-svc

---

apiVersion: v1
kind: Service
metadata:
  name: billing-svc
  namespace: eshop
spec:
  type: ClusterIP
  ports:
    - port: 8002
      targetPort: 8002
  selector:
    app: billing-svc

---

apiVersion: v1
kind: Service
metadata:
  name: order-svc
  namespace: eshop
spec:
  type: ClusterIP
  ports:
    - port: 8004
      targetPort: 8004
  selector:
    app: order-svc

---

apiVersion: v1
kind: Service
metadata:
  name: notification-svc
  namespace: eshop
spec:
  type: ClusterIP
  ports:
    - port: 8006
      targetPort: 8006
  selector:
    app: notification-svc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-svc-deployment
  namespace: eshop
  labels:
    app: user-svc
spec:
  selector:
    matchLabels:
      app: user-svc
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: user-svc
    spec:
      containers:            
        - image: andreyp123/eshop-user-svc:0.3
          name: user-svc
          env:
            - name: UserRepository__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: DB_CONNECTION_STRING
            - name: UserRepository__AutoMigrate
              value: "true"
          ports:
            - containerPort: 8000
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8000
              path: /health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 20

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-svc-deployment
  namespace: eshop
  labels:
    app: billing-svc
spec:
  selector:
    matchLabels:
      app: billing-svc
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: billing-svc
    spec:
      containers:            
        - image: andreyp123/eshop-billing-svc:0.3
          name: billing-svc
          env:
            - name: AccountRepository__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: DB_CONNECTION_STRING
            - name: AccountRepository__AutoMigrate
              value: "true"
          ports:
            - containerPort: 8002
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8002
              path: /health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8002
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 20

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-svc-deployment
  namespace: eshop
  labels:
    app: order-svc
spec:
  selector:
    matchLabels:
      app: order-svc
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: order-svc
    spec:
      containers:            
        - image: andreyp123/eshop-order-svc:0.3
          name: order-svc
          env:
            - name: OrderRepository__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: DB_CONNECTION_STRING
            - name: OrderRepository__AutoMigrate
              value: "true"
            - name: BillingClient__Url
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: BILLING_SVC_URL
            - name: KafkaProducer__BootstrapServers
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: KAFKA_BOOTSTRAP_SERVERS
          ports:
            - containerPort: 8004
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8004
              path: /health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8004
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 20

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-svc-deployment
  namespace: eshop
  labels:
    app: notification-svc
spec:
  selector:
    matchLabels:
      app: notification-svc
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: notification-svc
    spec:
      containers:            
        - image: andreyp123/eshop-notification-svc:0.3
          name: notification-svc
          env:
            - name: NotificationRepository__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: DB_CONNECTION_STRING
            - name: NotificationRepository__AutoMigrate
              value: "true"
            - name: KafkaConsumer__BootstrapServers
              valueFrom:
                configMapKeyRef:
                  name: eshop-config
                  key: KAFKA_BOOTSTRAP_SERVERS
          ports:
            - containerPort: 8006
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8006
              path: /health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8006
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 20
