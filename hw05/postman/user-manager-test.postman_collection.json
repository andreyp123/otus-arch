{
	"info": {
		"_postman_id": "1eacc8fd-591c-4211-bb19-3ecb1bbd0205",
		"name": "user-manager-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get App Version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/version",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"version"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get App Health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/health",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 1 is registered\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user1\",\n  \"email\": \"user1@user\",\n  \"password\": \"user1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User 1 Profile No Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Access profile without auth failed (401)\", () => {",
							"  pm.expect(pm.response.code).to.eql(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/cabinet",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cabinet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change User 1 Profile No Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change profile without auth failed (401)\", () => {",
							"  pm.expect(pm.response.code).to.eql(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"user1\",\n    \"email\": \"new_user1@user\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/cabinet",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cabinet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 1 logged in\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"if (pm.response.to.have.status(200)) {",
							"    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/auth/token?username=user1&password=user1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"token"
					],
					"query": [
						{
							"key": "username",
							"value": "user1"
						},
						{
							"key": "password",
							"value": "user1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Change User 1 Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 1 profile changed\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"user1\",\n    \"email\": \"new_user1@user\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/cabinet",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cabinet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User 1 Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 1 profile read\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"pm.test(\"User 1 profile correct\", () => {",
							"  pm.expect(pm.response.json().email).to.eql(\"new_user1@user\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/cabinet",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cabinet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 2 is registered\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"user2\",\n  \"email\": \"user2@user\",\n  \"password\": \"user2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 2 logged in\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"if (pm.response.to.have.status(200)) {",
							"    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/auth/token?username=user2&password=user2",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"token"
					],
					"query": [
						{
							"key": "username",
							"value": "user2"
						},
						{
							"key": "password",
							"value": "user2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User 2 Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 2 profile read\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"pm.test(\"User 2 profile correct\", () => {",
							"  pm.expect(pm.response.json().email).to.eql(\"user2@user\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/cabinet",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cabinet"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "accessToken",
			"value": ""
		}
	]
}