apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: user-manager-test-ingress
  namespace: otus-arch-hw05
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  defaultBackend:
    service:
      name: user-manager-test-service
      port:
        number: 8000
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: user-manager-test-service
                port:
                  number: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: user-manager-test-service
  namespace: otus-arch-hw05
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: user-manager-test

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-manager-test-deployment
  namespace: otus-arch-hw05
  labels:
    app: user-manager-test
spec:
  selector:
    matchLabels:
      app: user-manager-test
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: user-manager-test
    spec:
#      initContainers:
#        - image: groundnuty/k8s-wait-for:v1.3
#          name: user-manager-test-init
#          imagePullPolicy: IfNotPresent
#          args: 
#            - "job"
#            - "user-manager-test-migration-job"
      containers:            
        - image: andreyp123/user-manager-test:1.1
          name: user-manager-test
          env:
            - name: Logging__LogLevel__Default
              valueFrom:
                configMapKeyRef:
                  name: user-manager-test-config
                  key: LOG_LEVEL
            - name: UserRepository__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: user-manager-test-secret
                  key: DB_CONNECTION_STRING
          ports:
            - containerPort: 8000
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8000
              path: /health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 20
